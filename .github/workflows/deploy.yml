name: Deploy website

on:
  push:
    branches:
      - main
    paths:
      - 'www/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      WEB_SSH_SG_ID: ${{ secrets.WEB_SSH_SG_ID }}

    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-2
    
    - name: get runner ip address
      id: ip
      uses: haythem/public-ip@v1.2

    - name: whitelist runner ip address
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id $WEB_SSH_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create zip file of www directory
      run: zip -r html.zip www

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Copy zip file to webserver tmp directory
      run: scp -o StrictHostKeyChecking=no html.zip ec2-user@${{ secrets.EC2_PUB_IP }}:/tmp/

    - name: Unzip and deploy files within Nginx
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUB_IP }} << 'EOF'
          sudo rm -r /usr/share/nginx/html_old/
          sudo mv /usr/share/nginx/html/ /usr/share/nginx/html_old/
          sudo unzip -o /tmp/html.zip -d /usr/share/nginx/
          sudo mv /usr/share/nginx/www/ /usr/share/nginx/html/
          sudo rm /tmp/html.zip
          sudo systemctl restart nginx
        EOF

    - name: revoke runner ip address
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id $WEB_SSH_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: 'release-${{ github.sha }}'
        release_name: 'Release ${{ github.sha }}'
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./html.zip
        asset_name: html.zip
        asset_content_type: application/zip